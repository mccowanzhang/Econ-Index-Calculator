/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.econ_index_calculator;

/**
 *
 * @author McCowan
 */
public class Index_Calculator_UI extends javax.swing.JFrame {

    boolean chained = false;
    boolean unchained = false;
    boolean price = false;
    boolean quantity = false;
    boolean paasche = false;
    boolean laspeyres = false;
    boolean fisher = false;
    int max_years = 3; 
    int[] years = new int[3];
    double[][] good_price = new double[3][3];
    double[][] good_qty = new double[3][3];
    
    /* double[] good1_price = new double[3];
    double[] good2_price = new double[3];
    double[] good3_price = new double[3];
    double[] good1_quantity = new double[3];
    double[] good2_quantity = new double[3];
    double[] good3_quantity = new double[3]; */
    
    /**
     * Creates new form Index_Calculator_UI
     */
    public Index_Calculator_UI() {
        initComponents();
    }
    
    double paasche_price(int base, int cur){
        double num = 0;
        double den = 0;
        for(int i = 0; i < good_price.length; i++) {
            num += good_price[i][cur] * good_qty[i][cur];
            den += good_price[i][base] * good_qty[i][cur];
        }
        return num / den;
    }
    
    public double paasche_quantity(int base, int cur){
        double num = 0;
        double den = 0;
        for(int i = 0; i < good_price.length; i++) {
            num += good_price[i][cur] * good_qty[i][cur];
            den += good_price[i][cur] * good_qty[i][base];
        }
        return num / den;
    }
    
    public double laspeyres_price(int base, int cur){
        double num = 0;
        double den = 0;
        for(int i = 0; i < good_price.length; i++) {
            num += good_price[i][cur] * good_qty[i][base];
            den += good_price[i][base] * good_qty[i][base];
        }
        return num / den;
    }
    
    public double laspeyres_quantity(int base, int cur){
        double num = 0;
        double den = 0;
        for(int i = 0; i < good_price.length; i++) {
            num += good_price[i][base] * good_qty[i][cur];
            den += good_price[i][base] * good_qty[i][base];
        }
        return num / den;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        year1 = new javax.swing.JTextField();
        year2 = new javax.swing.JTextField();
        year1_quantity_label = new javax.swing.JLabel();
        year2_quantity_label = new javax.swing.JLabel();
        year1_price_label = new javax.swing.JLabel();
        year2_price_label = new javax.swing.JLabel();
        year1_good1_quantity = new javax.swing.JTextField();
        year1_good1_price = new javax.swing.JTextField();
        year2_good1_quantity = new javax.swing.JTextField();
        year2_good1_price = new javax.swing.JTextField();
        year1_good2_quantity = new javax.swing.JTextField();
        year1_good3_quantity = new javax.swing.JTextField();
        year1_good2_price = new javax.swing.JTextField();
        year2_good2_quantity = new javax.swing.JTextField();
        year2_good2_price = new javax.swing.JTextField();
        year1_good3_price = new javax.swing.JTextField();
        year2_good3_quantity = new javax.swing.JTextField();
        year2_good3_price = new javax.swing.JTextField();
        year3_good1_quantity = new javax.swing.JTextField();
        year3_good1_price = new javax.swing.JTextField();
        year3_good2_quantity = new javax.swing.JTextField();
        year3_good2_price = new javax.swing.JTextField();
        year3_quantity_label = new javax.swing.JLabel();
        year3_good3_quantity = new javax.swing.JTextField();
        year3_good3_price = new javax.swing.JTextField();
        year3_price_label = new javax.swing.JLabel();
        year3 = new javax.swing.JTextField();
        calculate_button = new javax.swing.JButton();
        chained_box = new javax.swing.JCheckBox();
        unchained_box = new javax.swing.JCheckBox();
        price_box = new javax.swing.JCheckBox();
        quantity_box = new javax.swing.JCheckBox();
        paasche_box = new javax.swing.JCheckBox();
        laspeyres_box = new javax.swing.JCheckBox();
        message_label = new javax.swing.JLabel();
        clear_all_button = new javax.swing.JButton();
        base_year_cbox = new javax.swing.JComboBox();
        current_year_cbox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fisher_box = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        year1.setPreferredSize(new java.awt.Dimension(106, 20));
        year1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                year1ActionPerformed(evt);
            }
        });

        year2.setPreferredSize(new java.awt.Dimension(106, 20));
        year2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                year2ActionPerformed(evt);
            }
        });

        year1_quantity_label.setText("Quantity");
        year1_quantity_label.setPreferredSize(new java.awt.Dimension(50, 14));

        year2_quantity_label.setText("Quantity");
        year2_quantity_label.setMaximumSize(new java.awt.Dimension(50, 14));
        year2_quantity_label.setMinimumSize(new java.awt.Dimension(50, 14));
        year2_quantity_label.setOpaque(true);
        year2_quantity_label.setPreferredSize(new java.awt.Dimension(50, 14));

        year1_price_label.setText("Price");
        year1_price_label.setPreferredSize(new java.awt.Dimension(50, 14));

        year2_price_label.setText("Price");
        year2_price_label.setPreferredSize(new java.awt.Dimension(50, 14));

        year1_good1_quantity.setPreferredSize(new java.awt.Dimension(50, 28));

        year1_good1_price.setPreferredSize(new java.awt.Dimension(50, 20));

        year2_good1_quantity.setPreferredSize(new java.awt.Dimension(50, 20));
        year2_good1_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                year2_good1_quantityActionPerformed(evt);
            }
        });

        year2_good1_price.setPreferredSize(new java.awt.Dimension(50, 20));

        year1_good2_quantity.setPreferredSize(new java.awt.Dimension(50, 20));

        year1_good3_quantity.setPreferredSize(new java.awt.Dimension(50, 20));

        year1_good2_price.setPreferredSize(new java.awt.Dimension(50, 20));

        year2_good2_quantity.setPreferredSize(new java.awt.Dimension(50, 20));

        year2_good2_price.setPreferredSize(new java.awt.Dimension(50, 20));

        year1_good3_price.setPreferredSize(new java.awt.Dimension(50, 20));

        year2_good3_quantity.setPreferredSize(new java.awt.Dimension(50, 20));

        year2_good3_price.setPreferredSize(new java.awt.Dimension(50, 20));

        year3_good1_quantity.setPreferredSize(new java.awt.Dimension(50, 20));

        year3_good1_price.setPreferredSize(new java.awt.Dimension(50, 20));

        year3_good2_quantity.setPreferredSize(new java.awt.Dimension(50, 20));

        year3_good2_price.setPreferredSize(new java.awt.Dimension(50, 20));

        year3_quantity_label.setText("Quantity");
        year3_quantity_label.setMaximumSize(new java.awt.Dimension(50, 14));
        year3_quantity_label.setMinimumSize(new java.awt.Dimension(50, 14));
        year3_quantity_label.setOpaque(true);

        year3_good3_quantity.setPreferredSize(new java.awt.Dimension(50, 20));

        year3_good3_price.setPreferredSize(new java.awt.Dimension(50, 20));

        year3_price_label.setText("Price");

        year3.setPreferredSize(new java.awt.Dimension(106, 20));
        year3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                year3ActionPerformed(evt);
            }
        });

        calculate_button.setText("Calculate");
        calculate_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculate_buttonActionPerformed(evt);
            }
        });

        chained_box.setText("Chained");
        chained_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chained_boxActionPerformed(evt);
            }
        });

        unchained_box.setText("Unchained");
        unchained_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unchained_boxActionPerformed(evt);
            }
        });

        price_box.setText("Price");
        price_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                price_boxActionPerformed(evt);
            }
        });

        quantity_box.setText("Quantity");
        quantity_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantity_boxActionPerformed(evt);
            }
        });

        paasche_box.setText("Paasche");
        paasche_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paasche_boxActionPerformed(evt);
            }
        });

        laspeyres_box.setText("Laspeyres");
        laspeyres_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laspeyres_boxActionPerformed(evt);
            }
        });

        message_label.setText("Fill in appropriate information");

        clear_all_button.setText("Clear All");
        clear_all_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_all_buttonActionPerformed(evt);
            }
        });

        base_year_cbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year 1", "Year 2", "Year 3" }));
        base_year_cbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                base_year_cboxActionPerformed(evt);
            }
        });

        current_year_cbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year 1", "Year 2", "Year 3" }));
        current_year_cbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                current_year_cboxActionPerformed(evt);
            }
        });

        jLabel1.setText("Price Index Calculator");

        jLabel2.setText("Year");

        jLabel3.setText("Quantity/Price");

        jLabel4.setText("Good 1");

        jLabel5.setText("Good 2");

        jLabel6.setText("Good 3");

        fisher_box.setText("Fisher");
        fisher_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fisher_boxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                                .addGap(10, 10, 10))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(year1_good1_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year1_good1_price, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year2_good1_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year2_good1_price, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(year1_good2_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year1_good2_price, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year2_good2_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year2_good2_price, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(year1_good3_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year1_good3_price, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year2_good3_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year2_good3_price, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(year1_quantity_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(year1_price_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(year1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(year2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(year2_quantity_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(year2_price_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(year3_quantity_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year3_price_label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(year3_good1_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(year3_good2_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(year3_good2_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(year3_good1_price, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(year3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(year3_good3_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year3_good3_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(base_year_cbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(current_year_cbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(unchained_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chained_box, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(quantity_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(price_box, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fisher_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(laspeyres_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(paasche_box, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(calculate_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(clear_all_button, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(28, 28, 28))
                    .addComponent(message_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(year3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(year2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(year1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(year2_quantity_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(year1_quantity_label, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(year1_price_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(year3_quantity_label, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(year3_price_label)
                                .addComponent(year2_price_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(year1_good1_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                    .addComponent(year1_good1_price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(year2_good1_quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(year2_good1_price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(year3_good1_quantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(year3_good1_price, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(year3_good2_price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(year3_good2_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(year1_good2_price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(year2_good2_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(year1_good2_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5))
                                    .addComponent(year2_good2_price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(year1_good3_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(year1_good3_price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(year2_good3_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(year2_good3_price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(year3_good3_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(year3_good3_price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(clear_all_button)
                        .addComponent(chained_box)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(price_box)
                            .addComponent(paasche_box)))
                    .addComponent(base_year_cbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(unchained_box)
                        .addComponent(current_year_cbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quantity_box)
                        .addComponent(calculate_button)
                        .addComponent(laspeyres_box)))
                .addGap(10, 10, 10)
                .addComponent(fisher_box)
                .addGap(18, 18, 18)
                .addComponent(message_label, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void processFields() {
        try {
            good_qty[0][0] = Double.parseDouble(year1_good1_quantity.getText());
            good_price[0][0] = Double.parseDouble(year1_good1_price.getText());
            good_qty[0][1] = Double.parseDouble(year2_good1_quantity.getText());
            good_price[0][1] = Double.parseDouble(year2_good1_price.getText());
            good_qty[0][2] = Double.parseDouble(year3_good1_quantity.getText());
            good_price[0][2] = Double.parseDouble(year3_good1_price.getText());
            
            good_qty[1][0] = Double.parseDouble(year1_good2_quantity.getText());
            good_price[1][0] = Double.parseDouble(year1_good2_price.getText());
            good_qty[1][1] = Double.parseDouble(year2_good2_quantity.getText());
            good_price[1][1] = Double.parseDouble(year2_good2_price.getText());
            good_qty[1][2] = Double.parseDouble(year3_good2_quantity.getText());
            good_price[1][2] = Double.parseDouble(year3_good2_price.getText());
            
            good_qty[2][0] = Double.parseDouble(year1_good3_quantity.getText());
            good_price[2][0] = Double.parseDouble(year1_good3_price.getText());
            good_qty[2][1] = Double.parseDouble(year2_good3_quantity.getText());
            good_price[2][1] = Double.parseDouble(year2_good3_price.getText());
            good_qty[2][2] = Double.parseDouble(year3_good3_quantity.getText());
            good_price[2][2] = Double.parseDouble(year3_good3_price.getText());
        } 
        catch (NumberFormatException ex){
            message_label.setText("Invalid input. Please enter integer values into text fields.");
        }
    }
    
    private void year2_good1_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_year2_good1_quantityActionPerformed
        try {
            
        } 
        catch (NumberFormatException ex){
            message_label.setText("Invalid input. Please enter integer values into text fields.");
        }
    }//GEN-LAST:event_year2_good1_quantityActionPerformed

    private void calculate_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculate_buttonActionPerformed
        processFields();
        double index = 0;
        double num = 0;
        double denom = 0;
        int base = base_year_cbox.getSelectedIndex();
        int cur = current_year_cbox.getSelectedIndex();
        if(!chained && !unchained){
            message_label.setText("Please select either 'chained' or 'unchained'.");
        } else if(!price && !quantity){
            message_label.setText("Please select either 'price' or 'quantity'.");
        } else if(!paasche && !laspeyres && !fisher){
            message_label.setText("Please select either 'paasche', 'laspeyres', or 'fisher'.");
        } else if(unchained && price && paasche){
            index = paasche_price(base, cur);
            message_label.setText("PP Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);
        } else if(unchained && quantity && paasche){
            index = paasche_quantity(base, cur);
            message_label.setText("PQ Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);
        } else if(unchained && price && laspeyres){
            index = laspeyres_price(base, cur);
            message_label.setText("PQ Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);
        } else if(unchained && quantity && laspeyres){
            index = laspeyres_quantity(base, cur);
            message_label.setText("PQ Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);        
        }  else if(unchained && price && fisher){
            index = Math.sqrt(laspeyres_price(base, cur) * paasche_price(base, cur));
            message_label.setText("FP Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);
        } else if(unchained && quantity && fisher){
            index = Math.sqrt(laspeyres_quantity(base, cur) * paasche_quantity(base,cur));
            message_label.setText("FQ Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index); 
        } else if(chained && price && paasche){
            index = 1;
            for(int i = base; i < cur; i++){
                index *= paasche_price(i, i + 1);
            }
            message_label.setText("CPP Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);
        } else if(chained && quantity && paasche){
            index = 1;
            for(int i = base; i < cur; i++){
                index *= paasche_quantity(i, i + 1);
            }
            message_label.setText("CPQ Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);
        } else if(chained && price && laspeyres){
            index = 1;
            for(int i = base; i < cur; i++){
                index *= laspeyres_price(i, i + 1);
            }
            message_label.setText("CLP Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);
        } else if(chained && quantity && laspeyres){
            index = laspeyres_quantity(base, cur);
            for(int i = base; i < cur; i++){
                index *= laspeyres_quantity(i, i + 1);
            }
            message_label.setText("CLQ Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);        
        }  else if(chained && price && fisher){
            int pp = 0;
            int lp = 0;
            for(int i = base; i < cur; i++){
                pp += laspeyres_price(i, i + 1);
                lp += paasche_price(i, i + 1); 
            }
            index = Math.sqrt(pp * lp);
            message_label.setText("CFP Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);
        } else if(chained && quantity && fisher){
            int pq = 0;
            int lq = 0;
            for(int i = base; i < cur; i++){
                pq += laspeyres_quantity(i, i + 1);
                lq += paasche_quantity(i, i + 1);
            }
            index = Math.sqrt(pq * lq);
            message_label.setText("CFQ Index for year" + years[cur] + 
                    " for base year of " + years[base] + ": " + index);        
        }
        
        
    }//GEN-LAST:event_calculate_buttonActionPerformed

    private void price_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_price_boxActionPerformed
        if(price){
            price_box.setSelected(false);
            price = false;
        } else {
            price_box.setSelected(true);
            price = true;
            quantity_box.setSelected(false);
            quantity = false;
        }
    }//GEN-LAST:event_price_boxActionPerformed

    private void quantity_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantity_boxActionPerformed
        if(quantity){
            quantity_box.setSelected(false);
            quantity = false;
        } else {
            quantity_box.setSelected(true);
            quantity = true;
            price_box.setSelected(false);
            price = false;
        }
    }//GEN-LAST:event_quantity_boxActionPerformed

    private void year1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_year1ActionPerformed
        try {
            years[0] = Integer.parseInt(year1.getText());
            //base_year_cbox.getItemAt(0);
            
        } 
        catch (NumberFormatException ex){
            message_label.setText("Invalid input. Please enter integer values into text fields.");
        }
       
    }//GEN-LAST:event_year1ActionPerformed

    private void current_year_cboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_current_year_cboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_current_year_cboxActionPerformed

    private void clear_all_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_all_buttonActionPerformed
        year1.setText("");
        year2.setText("");
        year3.setText("");
        /* for(int i = 0; i < max_years; i++){
            years[i] = 0;
            good1_quantity[i] = 1;
            good2_quantity[i] = 1;
            good3_quantity[i] = 1;
            good1_price[i] = 1;
            good2_price[i] = 1;
            good3_price[i] = 1;
        } */
        year1_good1_price.setText("");
        year1_good2_price.setText("");
        year1_good3_price.setText("");
        year2_good1_price.setText("");
        year2_good2_price.setText("");
        year2_good3_price.setText("");
        year3_good1_price.setText("");
        year3_good2_price.setText("");
        year3_good3_price.setText("");
        year1_good1_quantity.setText("");
        year1_good2_quantity.setText("");
        year1_good3_quantity.setText("");
        year2_good1_quantity.setText("");
        year2_good2_quantity.setText("");
        year2_good3_quantity.setText("");
        year3_good1_quantity.setText("");
        year3_good2_quantity.setText("");
        year3_good3_quantity.setText("");
        chained = false;
        unchained = false;
        price = false;
        quantity = false;
        paasche = false;
        laspeyres= false;
        chained_box.setSelected(false);
        unchained_box.setSelected(false);
        price_box.setSelected(false);
        quantity_box.setSelected(false);
        paasche_box.setSelected(false);
        laspeyres_box.setSelected(false);
        
        
    }//GEN-LAST:event_clear_all_buttonActionPerformed

    private void base_year_cboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_base_year_cboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_base_year_cboxActionPerformed

    private void chained_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chained_boxActionPerformed
        if(chained){
            chained_box.setSelected(false);
            chained = false;
        } else {
            chained_box.setSelected(true);
            chained = true;
            unchained_box.setSelected(false);
            unchained = false;
        }
        
    }//GEN-LAST:event_chained_boxActionPerformed

    private void year2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_year2ActionPerformed
        try {
            years[1] = Integer.parseInt(year2.getText());
            //base_year_cbox.insertItemAt(years[1], 1);
        } 
        catch (NumberFormatException ex){
            message_label.setText("Invalid input. Please enter integer values into text fields.");
        }
    }//GEN-LAST:event_year2ActionPerformed

    private void year3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_year3ActionPerformed
        try {
            years[2] = Integer.parseInt(year3.getText());
            //base_year_cbox.insertItemAt(years[2], 2);
        } 
        catch (NumberFormatException ex){
            message_label.setText("Invalid input. Please enter integer values into text fields.");
        }
    }//GEN-LAST:event_year3ActionPerformed

    private void unchained_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unchained_boxActionPerformed
        if(unchained){
            unchained_box.setSelected(false);
            unchained = false;
        } else {
            unchained_box.setSelected(true);
            unchained = true;
            chained_box.setSelected(false);
            chained = false;
        }
    }//GEN-LAST:event_unchained_boxActionPerformed

    private void paasche_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paasche_boxActionPerformed
        if(paasche){
            paasche_box.setSelected(false);
            paasche = false;
        } else {
            paasche_box.setSelected(true);
            paasche = true;
            laspeyres_box.setSelected(false);
            laspeyres = false;
            fisher_box.setSelected(false);
            fisher = false;
            
        }
    }//GEN-LAST:event_paasche_boxActionPerformed

    private void laspeyres_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laspeyres_boxActionPerformed
        if(laspeyres){
            laspeyres_box.setSelected(false);
            laspeyres = false;
        } else {
            laspeyres_box.setSelected(true);
            laspeyres = true;
            paasche_box.setSelected(false);
            paasche = false;
            fisher_box.setSelected(false);
            fisher = false;
        }
    }//GEN-LAST:event_laspeyres_boxActionPerformed

    private void fisher_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fisher_boxActionPerformed
        if(fisher){
            fisher_box.setSelected(false);
            fisher = false;
        } else {
            fisher_box.setSelected(true);
            fisher = true;
            paasche_box.setSelected(false);
            paasche = false;
            laspeyres_box.setSelected(false);
            laspeyres = false;
        }
    }//GEN-LAST:event_fisher_boxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index_Calculator_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index_Calculator_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index_Calculator_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index_Calculator_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index_Calculator_UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox base_year_cbox;
    private javax.swing.JButton calculate_button;
    private javax.swing.JCheckBox chained_box;
    private javax.swing.JButton clear_all_button;
    private javax.swing.JComboBox current_year_cbox;
    private javax.swing.JCheckBox fisher_box;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JCheckBox laspeyres_box;
    private javax.swing.JLabel message_label;
    private javax.swing.JCheckBox paasche_box;
    private javax.swing.JCheckBox price_box;
    private javax.swing.JCheckBox quantity_box;
    private javax.swing.JCheckBox unchained_box;
    private javax.swing.JTextField year1;
    private javax.swing.JTextField year1_good1_price;
    private javax.swing.JTextField year1_good1_quantity;
    private javax.swing.JTextField year1_good2_price;
    private javax.swing.JTextField year1_good2_quantity;
    private javax.swing.JTextField year1_good3_price;
    private javax.swing.JTextField year1_good3_quantity;
    private javax.swing.JLabel year1_price_label;
    private javax.swing.JLabel year1_quantity_label;
    private javax.swing.JTextField year2;
    private javax.swing.JTextField year2_good1_price;
    private javax.swing.JTextField year2_good1_quantity;
    private javax.swing.JTextField year2_good2_price;
    private javax.swing.JTextField year2_good2_quantity;
    private javax.swing.JTextField year2_good3_price;
    private javax.swing.JTextField year2_good3_quantity;
    private javax.swing.JLabel year2_price_label;
    private javax.swing.JLabel year2_quantity_label;
    private javax.swing.JTextField year3;
    private javax.swing.JTextField year3_good1_price;
    private javax.swing.JTextField year3_good1_quantity;
    private javax.swing.JTextField year3_good2_price;
    private javax.swing.JTextField year3_good2_quantity;
    private javax.swing.JTextField year3_good3_price;
    private javax.swing.JTextField year3_good3_quantity;
    private javax.swing.JLabel year3_price_label;
    private javax.swing.JLabel year3_quantity_label;
    // End of variables declaration//GEN-END:variables
}
